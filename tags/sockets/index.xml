<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Sockets on blog</title>
    <link>/tags/sockets/</link>
    <description>Recent content in Sockets on blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    
        <atom:link href="/tags/sockets/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Socket Programming (TCP)</title>
      <link>/posts/socket_programming/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/posts/socket_programming/</guid>
      <description>The C socket API allows a developer to design and build a TCP/IP client/server program. To begin with a socket address structure is needed (&amp;lt;sys/socket.h&amp;gt;):
struct sockaddr_in { sa_family_t sin_family; // AF_INET for TCP/IP in_port_t sin_port; // port number struct in_addr sin_addr; // IP address }; struct in_addr { // internet address (in_addr) uint32_t s_addr; // IP address in network byte order }; for TCP/IP connections sin_family is always set to AF_INET, sin_port contains the port number (in network byte order) and finally sin_addr is the host IP address, also in network byte order.</description>
      
    </item>
    
  </channel>
</rss>
