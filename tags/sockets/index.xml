<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Sockets - Tag - George&#39;s Blog</title>
        <link>georgesims21.github.io/tags/sockets/</link>
        <description>Sockets - Tag - George&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>Â©2019 Notepadium.</copyright><atom:link href="georgesims21.github.io/tags/sockets/" rel="self" type="application/rss+xml" /><item>
    <title>Socket Programming (TCP)</title>
    <link>georgesims21.github.io/posts/socket_programming/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>georgesims21.github.io/posts/socket_programming/</guid>
    <description><![CDATA[The C socket API allows a developer to design and build a TCP/IP client/server program. To begin with a socket address structure is needed (&lt;sys/socket.h&gt;):
struct sockaddr_in { sa_family_t sin_family; // AF_INET for TCP/IP in_port_t sin_port; // port number struct in_addr sin_addr; // IP address }; struct in_addr { // internet address (in_addr) uint32_t s_addr; // IP address in network byte order }; for TCP/IP connections sin_family is always set to AF_INET, sin_port contains the port number (in network byte order) and finally sin_addr is the host IP address, also in network byte order.]]></description>
</item>
</channel>
</rss>
